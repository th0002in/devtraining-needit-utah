<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt PastCurrent Date Validation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Validate Past/Current Date with If Condition
	
   // If condition to validate Past/Back Date is not allowed 
    var rightnow = new GlideDateTime();// rightnow stores the current time
    var whenNeeded = new GlideDateTime(current.u_when_needed); // Create a GlideDateTime object for the When needed date
    
    if (whenNeeded.before(rightnow)) { // If the When needed date is before rightnow, do not write the record to the database
        gs.addErrorMessage("When needed date cannot be in the past.  Your request has not been saved to the database.");// Output an error message to the screen
        current.setAbortAction(true);
    }

    //my asn to Challenge: New request cant submit on before and same date as current date
    //Use the onOrBefore method --> if(whenNeeded.onOrBefore(rightnow)){

		
    //proposed anw to Challenge: add another condition and use the CompareTo method
    
	// If condition to validate Current/Today Date is not allowed 
	var today = rightnow.getLocalDate();// Get the date portion of rightnow and whenNeeded (no timestamp)
    var istoday = whenNeeded.getLocalDate();// Get the date portion of rightnow and whenNeeded (no timestamp)
   
    if (today.compareTo(istoday) == 0) { // Compare today and istoday to see if they are the same day
        gs.addErrorMessage("You cannot submit NeedIt requests for today.");
        current.setAbortAction(true);
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-01-23 03:36:10</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3e60a993473b7d100509fee3846d4330</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>NeedIt PastCurrent Date Validation</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_3e60a993473b7d100509fee3846d4330</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-01-26 01:26:34</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3e60a993473b7d100509fee3846d4330"/>
</record_update>
